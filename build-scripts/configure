#!/bin/sh -x


. "$(dirname "$0")"/functions
. detect-environment
. compile-options
. version

case "$PROJECT" in
    community)
        NOVA=no
        ;;
    nova)
        NOVA=yes
        ;;
    *)
        fatal "Unknown project: $PROJECT"
        ;;
esac


P=$BUILDPREFIX

ARGS="--prefix=$P --libdir=$P/lib --with-workdir=$P --sysconfdir=/etc --with-openssl=$P --with-pcre2=$P --with-librsync=$P --with-init-script"

if [ $EMBEDDED_DB = lmdb ]
then
    var_append ARGS "--with-lmdb=$P"
fi

for dep in ldap libxml2 libyaml librsync leech libacl libvirt libcurl; do
    case "$DEPS" in
        *"$dep"*)
            var_append ARGS "--with-$dep=$P"
            ;;
        *)
            var_append ARGS "--without-$dep"
            ;;
    esac
done

case "$DEPS" in
    *pthreads-w32*)
        var_append ARGS "--with-pthreads=$P"
        ;;
esac

case "$DEPS" in
    *postgresql*)
        var_append ARGS "--with-postgresql=$P --without-mysql"
        ;;
    *)
        var_append ARGS "--without-sql"
        ;;
esac

case "$ROLE" in
    hub)
        var_append ARGS "--with-cfmod --with-enterprise-api --with-postgresql=$P"
        ;;
    agent)
        var_append ARGS "--without-cfmod --without-postgresql"
        ;;
    *)
        fatal "Unknown ROLE: $ROLE"
        ;;
esac

case "$WITH_SYSTEMD" in
    yes)
        var_append ARGS "--with-systemd-service"
        ;;
    *)
        var_append ARGS "--without-systemd-service"
        ;;
esac

# RHEL 8 requires an SELinux policy
if [ "$OS" = "rhel" ] && [ "${OS_VERSION%\.*}" -gt "7" ]; then
  var_append ARGS "--with-selinux-policy"
fi

# Cross-compiling Windows?
case "$ARCH-${OS_FAMILY}" in
    x86-mingw)
        var_append ARGS "--host=i686-w64-mingw32"
        ;;
    x64-mingw)
        var_append ARGS "--host=x86_64-w64-mingw32"
        ;;
esac


case "$BUILD_TYPE" in
    RELEASE)
        CFLAGS="-g2 -O2 -DNDEBUG  $CFLAGS"
        ;;
    DEBUG)
        ARGS="$ARGS --enable-debug"
        # Override the default "-g3 -O0" that comes with ./configure --enable-debug
        # in order to reduce the size of the packages
        CFLAGS="-g2 -O1 $CFLAGS"
        ;;
    *)
      echo "Unknown build type: $BUILD_TYPE"
      exit 42
      ;;
esac

if [ "$OS" = solaris ]
then
    export PKG_CONFIG_PATH="$BUILDPREFIX/lib/pkgconfig"
fi


( cd "$BASEDIR"/core && env "$OPTS" CFLAGS="$CFLAGS" ./configure "$ARGS" )

if [ "$NOVA" = yes ]
then
    ( cd "$BASEDIR"/enterprise && env $OPTS CFLAGS="$CFLAGS" ./configure "$ARGS" )
    if [ "$ROLE" = hub ]
    then
        ( cd "$BASEDIR"/nova && env $OPTS CFLAGS="$CFLAGS" ./configure "$ARGS" )
    fi
fi

( cd "$BASEDIR"/masterfiles && env $OPTS CFLAGS="$CFLAGS" ./configure "$ARGS" )
